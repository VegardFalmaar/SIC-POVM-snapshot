INFO:scipy.optimize.shgo:Splitting first generation
INFO:scipy.optimize.shgo:Constructing and refining simplicial complex graph structure
INFO:scipy.optimize.shgo:Triangulation completed, evaluating all constraints and objective function values.
INFO:scipy.optimize.shgo:Evaluations completed.
INFO:scipy.optimize.shgo:Searching for minimizer pool...
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 0.6666666666666667 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:Vertex minimiser maps = []
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 0.6666666666666667
        x: [ 0.000e+00  0.000e+00  0.000e+00  0.000e+00  0.000e+00
             0.000e+00  0.000e+00  0.000e+00]
      nit: 0
      jac: [-8.882e-08 -8.882e-08 -8.882e-08 -8.882e-08 -8.882e-08
            -8.882e-08 -8.882e-08 -8.882e-08]
     nfev: 9
     njev: 1
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 257 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.666667
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Minimiser pool = SHGO.X_min = []
INFO:scipy.optimize.shgo:Function evaluations done = 257 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.666667
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Constructing and refining simplicial complex graph structure
INFO:scipy.optimize.shgo:Triangulation completed, evaluating all constraints and objective function values.
INFO:scipy.optimize.shgo:Evaluations completed.
INFO:scipy.optimize.shgo:Searching for minimizer pool...
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 8.591516387213005e-12
        x: [ 3.555e-01 -1.629e-01 -5.285e-01 -4.696e-01 -2.934e-01
            -8.360e-02  7.438e-02 -1.544e-01]
      nit: 27
      jac: [ 1.649e-06  2.132e-06  1.782e-06 -1.277e-07  1.238e-06
             2.887e-07 -4.441e-07  6.106e-08]
     nfev: 468
     njev: 52
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.2545020577903188e-11
        x: [-3.001e-01  5.444e-02  4.697e-02 -1.648e-01 -4.090e-01
             2.397e-01 -3.891e-01  3.924e-02]
      nit: 21
      jac: [ 3.836e-06 -1.660e-06 -1.404e-06 -4.441e-07  2.420e-06
            -1.277e-06  4.446e-06 -3.214e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: ABNORMAL_TERMINATION_IN_LNSRCH
  success: False
   status: 2
      fun: 0.09144967355438144
        x: [ 2.015e-01  1.953e-01 -5.458e-01 -2.869e-01 -2.556e-01
             2.729e-01 -4.984e-01 -3.447e-01]
      nit: 3
      jac: [-4.937e-02  1.172e-01  6.297e-01  4.407e-01  1.788e-01
            -2.417e-01  5.316e-01  5.595e-01]
     nfev: 675
     njev: 75
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.2001623573307825e-12
        x: [ 1.299e-01 -1.519e-01  3.946e-01 -1.319e-01  7.600e-03
             2.416e-01 -2.500e-01 -4.163e-01]
      nit: 19
      jac: [ 1.116e-06 -1.837e-06  8.327e-07  1.121e-06  1.199e-06
             7.938e-07 -1.360e-06 -1.082e-06]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.399936136602946e-12
        x: [ 7.597e-03  2.416e-01 -1.944e-01  4.655e-02 -4.731e-01
             1.091e-01 -3.968e-01 -1.253e-01]
      nit: 21
      jac: [-3.331e-06  5.107e-07 -1.132e-06  4.108e-07  9.770e-07
            -3.997e-07 -1.787e-06  2.387e-07]
     nfev: 378
     njev: 42
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.163336342344337e-13
        x: [ 1.713e-01  6.267e-03  3.378e-01 -1.969e-01 -1.445e-01
             2.686e-01 -4.090e-01 -2.397e-01]
      nit: 15
      jac: [ 5.385e-07 -2.776e-08  6.661e-08  2.776e-08  1.832e-07
             1.887e-07  2.776e-07  5.440e-07]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.6982083234372567e-11
        x: [-3.891e-01  3.924e-02 -3.544e-01 -3.149e-01 -1.349e-01
             1.057e-01 -1.445e-01 -2.686e-01]
      nit: 16
      jac: [ 7.450e-06  2.554e-07 -1.904e-06  4.402e-06  2.243e-06
            -7.161e-07 -9.215e-07  7.772e-07]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.359235195039446e-12
        x: [ 5.889e-02  1.610e-01  2.917e-01 -2.604e-01 -3.002e-01
             5.445e-02 -3.544e-01 -3.149e-01]
      nit: 17
      jac: [-1.721e-06 -2.276e-06 -2.942e-07  6.106e-08 -1.921e-06
             8.993e-07  3.220e-07 -8.604e-07]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.4725554936821936e-11
        x: [ 4.697e-02 -1.648e-01 -1.575e-01 -3.579e-01  2.748e-01
             1.324e-01 -3.544e-01 -3.149e-01]
      nit: 21
      jac: [-4.002e-06  3.098e-06 -2.498e-06 -3.886e-06  4.274e-07
             2.132e-06  8.216e-07 -4.663e-06]
     nfev: 369
     njev: 41
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.0353331787201796e-11
        x: [ 5.888e-02  1.610e-01  2.917e-01 -2.604e-01 -3.002e-01
             5.445e-02 -3.544e-01 -3.149e-01]
      nit: 16
      jac: [-6.056e-06 -4.219e-07 -3.886e-06 -1.987e-06 -4.335e-06
             2.309e-06 -2.137e-06  4.047e-06]
     nfev: 324
     njev: 36
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.7950754478165436e-11
        x: [-3.891e-01  3.924e-02 -3.544e-01 -3.149e-01 -1.349e-01
             1.057e-01 -1.445e-01 -2.686e-01]
      nit: 15
      jac: [-2.370e-06  6.906e-06 -7.366e-06 -6.517e-06  3.408e-06
            -1.649e-06 -7.050e-07 -5.812e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1781947639732948e-10
        x: [ 5.889e-02  1.610e-01  2.917e-01 -2.604e-01 -3.002e-01
             5.446e-02 -3.544e-01 -3.149e-01]
      nit: 22
      jac: [-1.760e-06 -4.219e-06 -1.776e-06  7.205e-06 -4.924e-06
             8.293e-06  6.412e-06 -1.465e-06]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.432365585671505e-11
        x: [ 1.847e-01  7.664e-02 -3.968e-01 -1.253e-01 -2.274e-01
             8.188e-02 -2.500e-01 -4.163e-01]
      nit: 14
      jac: [ 5.207e-06  4.108e-06  9.692e-06  2.132e-06  1.038e-06
             1.116e-06 -3.109e-06  7.772e-08]
     nfev: 279
     njev: 31
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.684458211277274e-11
        x: [-3.968e-01 -1.253e-01  3.187e-01 -3.664e-01 -1.044e-01
            -1.705e-01 -1.481e-01 -1.910e-01]
      nit: 22
      jac: [-4.330e-06  1.843e-06  5.540e-06 -2.043e-06  1.299e-06
             2.015e-06 -1.055e-06 -1.510e-06]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.980493629678449e-11
        x: [-9.682e-02  3.789e-01  2.187e-01 -2.126e-01 -4.175e-01
             2.246e-01 -5.564e-01 -4.362e-01]
      nit: 54
      jac: [-1.682e-06 -1.593e-06  3.048e-06  2.814e-06  6.545e-06
            -1.610e-07 -6.717e-07  1.088e-06]
     nfev: 837
     njev: 93
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: ABNORMAL_TERMINATION_IN_LNSRCH
  success: False
   status: 2
      fun: 0.02169250933880118
        x: [ 3.600e-01 -1.715e-01  9.586e-03  1.758e-01 -4.013e-01
             4.692e-01 -1.076e-01 -6.327e-01]
      nit: 5
      jac: [-1.622e-01  1.012e-01  9.688e-02 -3.498e-02  1.010e-01
            -1.720e-01  1.966e-02  2.915e-01]
     nfev: 693
     njev: 77
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.724232282095954e-12
        x: [ 4.697e-02  1.648e-01 -3.891e-01 -3.924e-02 -3.001e-01
            -5.445e-02 -4.090e-01 -2.397e-01]
      nit: 17
      jac: [ 3.053e-06 -6.661e-08 -5.218e-07  7.716e-07  1.316e-06
            -2.631e-06  9.770e-07  5.496e-07]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.4705737455832377e-11
        x: [ 5.889e-02  1.610e-01  2.917e-01 -2.604e-01 -3.002e-01
             5.445e-02 -3.544e-01 -3.149e-01]
      nit: 14
      jac: [-1.793e-06  4.263e-06  1.910e-06 -4.358e-06 -3.308e-06
             3.059e-06 -5.407e-06 -1.876e-06]
     nfev: 270
     njev: 30
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1547429679126253e-12
        x: [-4.732e-01 -1.091e-01  7.599e-03 -2.416e-01 -3.968e-01
             1.253e-01 -1.944e-01 -4.655e-02]
      nit: 22
      jac: [-6.939e-07  3.331e-07  1.388e-07 -1.316e-06 -1.621e-06
             1.110e-07 -2.776e-08  3.331e-08]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.691003224228552e-13
        x: [ 1.900e-01  4.343e-01 -4.097e-02 -3.023e-01 -1.575e-01
             3.579e-01 -1.349e-01 -1.057e-01]
      nit: 20
      jac: [-3.830e-07 -4.330e-07 -2.554e-07 -5.551e-08 -2.887e-07
             8.327e-07  6.883e-07 -7.605e-07]
     nfev: 369
     njev: 41
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.6401158209333744e-11
        x: [ 7.110e-02 -2.966e-01 -5.463e-02 -4.709e-01 -7.035e-01
            -7.095e-02 -4.244e-02 -1.661e-01]
      nit: 26
      jac: [-2.776e-07  4.874e-06  2.248e-06  3.270e-06  7.777e-06
             2.714e-06  1.832e-06 -2.659e-06]
     nfev: 567
     njev: 63
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.0677737300189847e-11
        x: [ 5.889e-02  1.610e-01  2.917e-01 -2.604e-01 -3.002e-01
             5.445e-02 -3.544e-01 -3.149e-01]
      nit: 20
      jac: [ 2.781e-06 -1.377e-06 -2.054e-06  1.549e-06 -2.798e-06
             2.659e-06 -1.010e-06  9.437e-08]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.9212910696306835e-11
        x: [-4.732e-01 -1.091e-01  7.602e-03 -2.416e-01 -3.968e-01
             1.253e-01 -1.944e-01 -4.655e-02]
      nit: 21
      jac: [-1.543e-06  2.354e-06  3.159e-06  9.087e-06  2.326e-06
            -4.474e-06 -1.549e-06  1.771e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3944845278501816e-11
        x: [ 2.748e-01  1.324e-01  4.697e-02 -1.648e-01 -3.544e-01
            -3.149e-01 -1.575e-01 -3.579e-01]
      nit: 21
      jac: [ 7.605e-07  1.077e-06  2.431e-06 -4.274e-07 -6.106e-07
             4.818e-06  1.521e-06  3.442e-07]
     nfev: 486
     njev: 54
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Minimiser pool = SHGO.X_min = []
INFO:scipy.optimize.shgo:Function evaluations done = 514 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Constructing and refining simplicial complex graph structure
INFO:scipy.optimize.shgo:Triangulation completed, evaluating all constraints and objective function values.
INFO:scipy.optimize.shgo:Evaluations completed.
INFO:scipy.optimize.shgo:Searching for minimizer pool...
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.288802811837968e-12
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 17
      jac: [-1.998e-07  2.687e-06 -2.387e-07  1.593e-06  2.737e-06
             1.221e-07  1.427e-06  1.615e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.2677693056749604e-11
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 18
      jac: [-2.620e-06  3.497e-06 -3.053e-07 -3.048e-06 -5.579e-06
            -1.316e-06  9.215e-07 -3.331e-07]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.3958057759898566e-12
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 24
      jac: [ 1.421e-06 -7.716e-07  7.216e-07 -1.144e-06  2.387e-07
            -1.499e-06 -3.886e-08  1.998e-07]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.165590177824697e-12
        x: [-3.613e-01  6.018e-01  6.019e-02 -1.907e-01  3.585e-01
             2.112e-01  1.014e-01  2.194e-01]
      nit: 33
      jac: [-1.055e-07 -3.997e-07  7.661e-07 -2.509e-06 -1.960e-06
            -1.404e-06  9.603e-07  1.177e-06]
     nfev: 540
     njev: 60
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.9691250286466584e-11
        x: [ 5.889e-02 -1.610e-01 -1.576e-01  3.579e-01  2.108e-01
             2.205e-01 -4.090e-01 -2.397e-01]
      nit: 16
      jac: [ 7.938e-07  3.991e-06 -7.222e-06 -5.856e-06 -1.221e-07
             7.605e-07 -5.190e-06  3.497e-07]
     nfev: 288
     njev: 32
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.919237157035127e-11
        x: [-3.002e-01 -5.445e-02 -1.422e-01  9.561e-02  1.900e-01
             4.343e-01 -8.291e-02 -3.822e-01]
      nit: 17
      jac: [ 4.052e-07 -4.519e-06  3.175e-06  7.649e-06  4.313e-06
             2.776e-08 -3.580e-06 -3.886e-08]
     nfev: 288
     njev: 32
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0779432901841801e-11
        x: [ 3.378e-01  1.969e-01 -4.090e-01  2.397e-01  1.713e-01
            -6.267e-03 -1.445e-01 -2.686e-01]
      nit: 17
      jac: [ 1.216e-06  2.520e-06 -3.925e-06  1.449e-06 -4.718e-07
            -1.538e-06  2.254e-06 -2.159e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.196121311001889e-12
        x: [-3.002e-01 -5.444e-02 -1.423e-01  9.560e-02  1.900e-01
             4.343e-01 -8.291e-02 -3.822e-01]
      nit: 20
      jac: [-5.551e-09  2.282e-06 -9.603e-07 -1.799e-06 -1.599e-06
            -8.826e-07  6.328e-07 -1.199e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.3776092206162502e-11
        x: [ 1.713e-01 -6.267e-03 -8.291e-02  3.822e-01 -4.097e-02
             3.023e-01 -3.544e-01 -3.149e-01]
      nit: 15
      jac: [ 1.255e-06 -1.221e-07 -9.603e-07 -8.438e-07 -2.170e-06
             4.596e-06  1.604e-06  5.607e-07]
     nfev: 279
     njev: 31
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.026217999466894e-11
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 21
      jac: [-6.717e-07 -3.553e-06 -3.442e-06  1.393e-06  6.106e-08
            -1.321e-06 -1.360e-06  5.218e-07]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: ABNORMAL_TERMINATION_IN_LNSRCH
  success: False
   status: 2
      fun: 0.027993100736390164
        x: [ 3.235e-01 -1.666e-01 -1.237e-01  7.664e-02  5.251e-01
            -9.773e-02 -7.138e-01 -2.184e-01]
      nit: 6
      jac: [-4.248e-01  2.343e-01  5.837e-02 -6.311e-02 -3.926e-01
             7.831e-02  5.016e-01  1.790e-01]
     nfev: 729
     njev: 81
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1334821969910536e-11
        x: [-3.002e-01 -5.445e-02 -1.423e-01  9.560e-02  1.900e-01
             4.343e-01 -8.291e-02 -3.822e-01]
      nit: 22
      jac: [-1.843e-06 -2.015e-06 -1.987e-06  7.938e-07  1.010e-06
             2.975e-06 -2.520e-06 -4.236e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 8.831324560532039e-12
        x: [ 2.187e-01  2.126e-01 -5.564e-01  4.362e-01 -9.683e-02
            -3.789e-01 -4.175e-01 -2.246e-01]
      nit: 45
      jac: [ 4.219e-07 -2.554e-06 -2.986e-06  6.939e-07 -2.331e-06
            -1.721e-07  1.499e-06 -9.992e-08]
     nfev: 747
     njev: 83
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.5817794003255585e-12
        x: [ 7.598e-03 -2.416e-01 -1.582e-02 -1.993e-01  3.187e-01
             3.664e-01 -2.418e-01 -3.387e-01]
      nit: 22
      jac: [-1.288e-06  4.108e-07  2.137e-06  1.493e-06  7.383e-07
            -3.109e-07 -1.221e-06  1.776e-07]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.802735903946086e-12
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 22
      jac: [ 1.388e-06  3.775e-07 -1.188e-06  1.910e-06  1.771e-06
             1.737e-06 -3.886e-08 -4.496e-07]
     nfev: 396
     njev: 44
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.165351704024431e-10
        x: [ 1.299e-01  1.519e-01 -3.968e-01  1.253e-01  2.321e-01
            -6.742e-02 -4.245e-02 -4.837e-01]
      nit: 19
      jac: [ 6.134e-06 -6.162e-07  9.093e-06 -2.343e-06 -6.289e-06
            -4.369e-06  5.079e-06 -9.071e-06]
     nfev: 486
     njev: 54
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.285066911360104e-11
        x: [ 5.889e-02 -1.610e-01 -1.575e-01  3.579e-01  2.108e-01
             2.205e-01 -4.090e-01 -2.397e-01]
      nit: 18
      jac: [ 6.284e-06  8.127e-06 -9.770e-07  2.692e-06  7.089e-06
             1.515e-06 -4.169e-06  1.188e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.2398417282308856e-11
        x: [-1.044e-01 -1.705e-01 -2.418e-01  3.387e-01  2.321e-01
             6.742e-02 -2.500e-01 -4.163e-01]
      nit: 19
      jac: [ 3.714e-06 -3.780e-06  9.936e-07 -2.864e-06 -6.450e-06
             7.716e-07  1.071e-06  3.442e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3182732683247878e-11
        x: [ 3.378e-01  1.969e-01 -4.090e-01  2.397e-01  1.713e-01
            -6.263e-03 -1.445e-01 -2.686e-01]
      nit: 25
      jac: [ 3.220e-07  9.659e-07 -2.082e-06  2.703e-06  1.299e-06
             5.018e-06 -4.996e-07 -2.015e-06]
     nfev: 567
     njev: 63
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.661232345602116e-11
        x: [-3.968e-01  1.253e-01 -2.500e-01  4.163e-01  1.847e-01
            -7.663e-02 -2.274e-01 -8.187e-02]
      nit: 22
      jac: [-3.886e-07 -4.097e-06  1.960e-06  4.846e-06 -1.149e-06
             1.743e-06  1.132e-06 -8.715e-07]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.5353458221744063e-10
        x: [ 3.378e-01  1.970e-01 -4.090e-01  2.397e-01  1.713e-01
            -6.270e-03 -1.445e-01 -2.686e-01]
      nit: 17
      jac: [ 5.207e-06  5.351e-06 -7.000e-06  7.339e-06 -6.667e-06
            -9.492e-07 -4.380e-06  9.731e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.340883125702021e-11
        x: [-3.488e-03 -4.161e-01 -4.731e-01  1.091e-01  1.299e-01
            -1.519e-01 -1.481e-01 -1.910e-01]
      nit: 21
      jac: [-3.136e-06 -2.248e-06  4.907e-06  2.787e-06 -2.859e-06
             8.826e-07  1.282e-06  2.509e-06]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 8.871792189779626e-13
        x: [-1.349e-01  1.057e-01 -3.891e-01  3.924e-02 -1.445e-01
            -2.686e-01 -3.544e-01 -3.149e-01]
      nit: 24
      jac: [ 5.329e-07 -3.497e-07  1.088e-06  4.829e-07 -6.106e-07
             8.160e-07  4.718e-07 -2.665e-07]
     nfev: 531
     njev: 59
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1160350421590692e-11
        x: [-8.291e-02 -3.822e-01 -3.544e-01  3.149e-01  1.713e-01
             6.268e-03 -4.097e-02 -3.023e-01]
      nit: 23
      jac: [-2.454e-06 -1.105e-06  2.287e-06  1.626e-06  6.661e-07
             2.276e-07  1.998e-06 -4.718e-07]
     nfev: 450
     njev: 50
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Minimiser pool = SHGO.X_min = []
INFO:scipy.optimize.shgo:Function evaluations done = 771 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Constructing and refining simplicial complex graph structure
INFO:scipy.optimize.shgo:Triangulation completed, evaluating all constraints and objective function values.
INFO:scipy.optimize.shgo:Evaluations completed.
INFO:scipy.optimize.shgo:Searching for minimizer pool...
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.323363723633065e-12
        x: [ 1.358e-01 -1.999e-01 -1.944e-01  4.655e-02 -2.500e-01
            -4.163e-01 -3.483e-03 -4.161e-01]
      nit: 19
      jac: [ 1.427e-06  6.328e-07 -3.164e-07 -6.939e-07 -1.121e-06
            -2.720e-07  1.593e-06 -8.271e-07]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.8135937196461782e-11
        x: [-1.445e-01  2.686e-01  1.713e-01  6.268e-03 -4.090e-01
            -2.397e-01  3.378e-01 -1.969e-01]
      nit: 21
      jac: [-1.021e-06 -8.493e-07  3.858e-06  9.326e-07  4.385e-07
            -2.004e-06 -2.276e-07  3.775e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0283052187531894e-11
        x: [-2.274e-01 -8.187e-02 -1.044e-01  1.705e-01 -4.732e-01
            -1.091e-01  2.474e-01 -3.346e-01]
      nit: 17
      jac: [ 2.698e-06  1.998e-07  1.571e-06 -2.481e-06 -1.033e-06
             1.371e-06  2.659e-06 -1.832e-07]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.023909066537158e-11
        x: [ 3.946e-01 -1.319e-01 -4.246e-02  4.837e-01 -1.044e-01
            -1.705e-01  1.358e-01 -1.999e-01]
      nit: 19
      jac: [-1.210e-06  1.954e-06  4.680e-06 -3.747e-06 -5.329e-06
             2.276e-06 -3.492e-06 -5.329e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.097050228437979e-11
        x: [-3.002e-01  5.445e-02  5.889e-02  1.610e-01 -3.544e-01
            -3.149e-01  2.917e-01 -2.604e-01]
      nit: 15
      jac: [-1.998e-06  1.249e-06  1.277e-07  2.659e-06  1.155e-06
            -1.815e-06  2.054e-06 -4.574e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.952382699954569e-11
        x: [ 3.946e-01 -1.319e-01 -4.246e-02  4.837e-01 -1.044e-01
            -1.705e-01  1.358e-01 -1.999e-01]
      nit: 20
      jac: [ 2.276e-06 -7.716e-07  8.327e-08  6.495e-06  2.293e-06
            -1.121e-06  2.315e-06  4.163e-07]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.220457316961301e-12
        x: [-3.002e-01  5.445e-02  5.889e-02  1.610e-01 -3.544e-01
            -3.149e-01  2.917e-01 -2.604e-01]
      nit: 17
      jac: [-1.882e-06  9.270e-07 -1.715e-06 -2.265e-06  3.442e-07
            -7.883e-07 -2.609e-07  7.772e-08]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.8086590265228324e-11
        x: [ 4.718e-01 -4.646e-02 -1.445e-01  2.686e-01 -8.291e-02
            -3.822e-01  5.889e-02 -1.610e-01]
      nit: 16
      jac: [-4.435e-06 -6.473e-06  3.064e-06 -6.217e-06  2.964e-06
            -2.581e-06  1.615e-06  2.565e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.2073566852707245e-12
        x: [-2.274e-01 -8.188e-02 -1.044e-01  1.705e-01 -4.731e-01
            -1.091e-01  2.474e-01 -3.346e-01]
      nit: 17
      jac: [-4.607e-07 -2.542e-06 -1.388e-07  3.109e-07  1.543e-06
             5.551e-09  7.883e-07  5.773e-07]
     nfev: 324
     njev: 36
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.9265923845732686e-11
        x: [ 7.066e-01 -2.585e-02 -3.426e-01  3.276e-01 -5.199e-02
            -3.006e-01 -9.683e-02 -3.789e-01]
      nit: 99
      jac: [-7.366e-06 -1.260e-06 -4.469e-06  1.471e-06  2.737e-06
            -1.948e-06 -1.421e-06  2.165e-07]
     nfev: 2961
     njev: 329
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3880341320771095e-11
        x: [-4.732e-01 -1.091e-01  1.358e-01  1.999e-01 -2.417e-01
            -3.387e-01  1.847e-01 -7.664e-02]
      nit: 25
      jac: [-1.243e-06 -1.688e-06 -4.774e-07  3.569e-06  1.182e-06
            -2.559e-06  6.772e-07 -4.102e-06]
     nfev: 405
     njev: 45
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.491801375294813e-11
        x: [ 2.748e-01 -1.324e-01 -1.349e-01 -1.057e-01 -4.090e-01
            -2.397e-01 -8.292e-02 -3.821e-01]
      nit: 29
      jac: [ 6.828e-07 -9.048e-07  8.660e-07 -1.699e-06 -7.772e-07
             5.812e-06 -2.731e-06  4.019e-06]
     nfev: 441
     njev: 49
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.436245732402199e-11
        x: [-2.418e-01 -3.387e-01  3.187e-01  3.664e-01 -1.581e-02
            -1.993e-01  7.602e-03 -2.416e-01]
      nit: 24
      jac: [-1.166e-06  4.391e-06  2.531e-06  3.764e-06  2.176e-06
             3.492e-06  4.147e-06 -3.630e-06]
     nfev: 405
     njev: 45
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.4016166005603736e-10
        x: [-1.044e-01  1.705e-01 -3.475e-03  4.161e-01  7.594e-03
            -2.416e-01  4.469e-01 -1.899e-01]
      nit: 17
      jac: [-5.729e-06  5.052e-06  9.609e-06 -9.537e-06 -8.149e-06
             9.920e-06 -6.534e-06  4.691e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.5939471964543372e-12
        x: [-2.418e-01 -3.387e-01  3.187e-01  3.664e-01 -1.582e-02
            -1.993e-01  7.599e-03 -2.416e-01]
      nit: 20
      jac: [-1.621e-06  1.665e-08  3.775e-07  1.138e-06  4.274e-07
            -3.275e-07 -3.553e-07  8.271e-07]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.0953906932372774e-12
        x: [ 1.299e-01  1.519e-01 -2.418e-01 -3.387e-01 -2.274e-01
            -8.187e-02  4.469e-01 -1.899e-01]
      nit: 23
      jac: [ 1.499e-06 -4.996e-08  4.441e-07  4.996e-08  3.164e-07
            -7.050e-07  1.898e-06 -1.960e-06]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.6381784817554035e-11
        x: [-1.575e-01  3.579e-01  1.900e-01  4.343e-01 -1.349e-01
            -1.057e-01 -4.097e-02 -3.023e-01]
      nit: 18
      jac: [ 2.909e-06  1.066e-06  2.426e-06  4.691e-06 -4.313e-06
            -1.632e-06  1.160e-06  2.331e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.3041457630768036e-11
        x: [-1.044e-01 -1.705e-01 -3.968e-01 -1.253e-01 -1.481e-01
            -1.910e-01  3.187e-01 -3.664e-01]
      nit: 18
      jac: [-8.493e-07 -1.499e-06 -5.329e-07 -3.852e-06  1.982e-06
            -7.772e-08 -4.996e-06  1.404e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.691924792079362e-11
        x: [-1.445e-01  2.686e-01  1.713e-01  6.264e-03 -4.090e-01
            -2.397e-01  3.378e-01 -1.969e-01]
      nit: 15
      jac: [ 2.542e-06  5.274e-06 -2.248e-06 -2.409e-06 -1.832e-06
             6.373e-06 -1.271e-06 -1.515e-06]
     nfev: 288
     njev: 32
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.874578270388838e-11
        x: [-2.274e-01 -8.188e-02 -1.044e-01  1.705e-01 -4.731e-01
            -1.091e-01  2.474e-01 -3.346e-01]
      nit: 18
      jac: [-2.820e-06 -3.308e-06 -2.809e-06 -2.109e-07  1.571e-06
            -2.420e-06 -2.814e-06  1.160e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.920330643974012e-11
        x: [ 4.697e-02 -1.648e-01  2.917e-01 -2.604e-01 -1.445e-01
            -2.686e-01  1.900e-01 -4.343e-01]
      nit: 20
      jac: [ 3.064e-06  1.754e-06  1.055e-07 -3.669e-06  1.038e-06
             1.932e-06 -2.548e-06 -4.940e-07]
     nfev: 369
     njev: 41
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 0.0027220591118604642
        x: [-3.024e-01  5.229e-01 -6.830e-02  2.030e-01 -6.830e-02
            -2.030e-01 -3.024e-01 -5.229e-01]
      nit: 18
      jac: [-2.698e-06  3.381e-06 -3.214e-06 -1.665e-07 -3.481e-06
             2.154e-06  4.685e-06  3.159e-06]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.118067081255617e-11
        x: [ 7.597e-03 -2.416e-01  1.847e-01 -7.663e-02 -4.246e-02
            -4.837e-01  2.474e-01 -3.346e-01]
      nit: 20
      jac: [-3.425e-06  9.548e-07  1.094e-06  3.625e-06  3.009e-06
             2.759e-06 -7.710e-06  9.037e-06]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.6324331603433393e-11
        x: [-1.044e-01 -1.705e-01 -3.968e-01 -1.253e-01 -1.481e-01
            -1.910e-01  3.187e-01 -3.664e-01]
      nit: 22
      jac: [ 1.343e-06  2.054e-06 -4.241e-06  1.860e-06 -1.055e-06
            -1.460e-06  5.496e-06 -1.976e-06]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.5549950216353636e-11
        x: [-4.246e-02  4.837e-01  2.321e-01  6.742e-02 -3.968e-01
            -1.253e-01  1.299e-01 -1.519e-01]
      nit: 20
      jac: [ 1.366e-06  5.163e-07 -1.737e-06  3.442e-06  2.764e-06
            -2.093e-06 -2.670e-06  1.615e-06]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.2774503677093207e-11
        x: [ 1.358e-01 -1.999e-01 -1.944e-01  4.654e-02 -2.500e-01
            -4.163e-01 -3.483e-03 -4.161e-01]
      nit: 15
      jac: [ 6.439e-07 -9.770e-07 -1.754e-06 -3.253e-06 -1.538e-06
            -4.424e-06 -2.109e-07 -3.630e-06]
     nfev: 270
     njev: 30
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.6711021455506625e-11
        x: [-3.544e-01 -3.149e-01  2.748e-01  1.324e-01 -1.575e-01
            -3.579e-01  4.697e-02 -1.648e-01]
      nit: 21
      jac: [-7.327e-07  5.285e-06  7.772e-07  1.038e-06  1.793e-06
             3.719e-07  2.681e-06 -5.163e-07]
     nfev: 486
     njev: 54
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1193157511968366e-11
        x: [ 2.748e-01 -1.324e-01 -1.349e-01 -1.057e-01 -4.090e-01
            -2.397e-01 -8.291e-02 -3.822e-01]
      nit: 17
      jac: [-2.970e-06  1.599e-06 -1.943e-07 -2.082e-06  2.104e-06
            -1.915e-06 -2.404e-06  3.375e-06]
     nfev: 450
     njev: 50
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.93662880071588e-11
        x: [-3.968e-01  1.253e-01 -4.732e-01 -1.091e-01 -1.944e-01
            -4.655e-02  7.602e-03 -2.416e-01]
      nit: 21
      jac: [ 2.626e-06 -4.330e-06 -1.665e-06  2.326e-06 -1.465e-06
             1.832e-06  3.075e-06  9.159e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.558542349679783e-12
        x: [ 2.748e-01 -1.324e-01 -1.349e-01 -1.057e-01 -4.090e-01
            -2.397e-01 -8.291e-02 -3.822e-01]
      nit: 23
      jac: [-9.048e-07  1.760e-06  3.997e-07  1.571e-06  7.272e-07
             1.199e-06  1.654e-06  2.887e-07]
     nfev: 531
     njev: 59
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.65899557716898e-11
        x: [ 7.595e-03 -2.416e-01  1.847e-01 -7.664e-02 -4.246e-02
            -4.837e-01  2.474e-01 -3.346e-01]
      nit: 21
      jac: [-4.169e-06 -6.278e-06 -5.507e-06 -2.570e-06  2.537e-06
             1.610e-06  3.564e-06 -8.371e-06]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.174616373755271e-12
        x: [-1.737e-01 -9.894e-02 -4.239e-01 -2.367e-01 -1.377e-01
            -3.927e-01 -4.302e-01 -5.546e-01]
      nit: 43
      jac: [ 3.142e-06  2.615e-06  2.065e-06  2.831e-06  3.170e-06
             2.576e-06  1.538e-06  2.509e-06]
     nfev: 693
     njev: 77
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Minimiser pool = SHGO.X_min = []
INFO:scipy.optimize.shgo:Function evaluations done = 1032 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Constructing and refining simplicial complex graph structure
INFO:scipy.optimize.shgo:Triangulation completed, evaluating all constraints and objective function values.
INFO:scipy.optimize.shgo:Evaluations completed.
INFO:scipy.optimize.shgo:Searching for minimizer pool...
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1001.0 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1001.0 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1001.0 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1001.0 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1646.7513110645907 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0) || f = 1829.4271247461902
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1237.0679774997898 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, -1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 1450.489742783178 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0) || f = 1646.7513110645907
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:v.x = [ 0.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00] is minimizer
INFO:scipy.optimize.shgo:v.f = 733.0508075688772 is minimizer
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:Neighbors:
INFO:scipy.optimize.shgo:==============================
INFO:scipy.optimize.shgo:x = (0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1001.0
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1001.0
INFO:scipy.optimize.shgo:x = (1.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:x = (-1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, -1.0) || f = 1450.489742783178
INFO:scipy.optimize.shgo:============================================================
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.846839679080063e-11
        x: [-8.291e-02 -3.822e-01 -3.544e-01  3.149e-01  1.713e-01
             6.275e-03 -4.096e-02 -3.023e-01]
      nit: 17
      jac: [ 2.121e-06  8.826e-07 -5.163e-07 -2.925e-06  1.094e-06
             7.888e-06  4.541e-06 -1.582e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3833156842224525e-11
        x: [-3.484e-03  4.161e-01  3.187e-01  3.664e-01  1.847e-01
            -7.663e-02  2.321e-01 -6.742e-02]
      nit: 18
      jac: [ 5.718e-07  4.446e-06  1.682e-06  3.880e-06  3.891e-06
            -1.932e-06  4.996e-07  9.215e-07]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.238204397490676e-11
        x: [ 2.108e-01 -2.205e-01 -1.349e-01  1.057e-01  4.718e-01
             4.645e-02  2.917e-01 -2.604e-01]
      nit: 19
      jac: [ 2.681e-06 -4.402e-06  4.258e-06  1.410e-06 -8.799e-06
            -4.713e-06 -4.774e-06 -1.416e-06]
     nfev: 324
     njev: 36
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1031731084187868e-11
        x: [ 1.299e-01 -1.519e-01  2.474e-01  3.346e-01  1.358e-01
            -1.999e-01  3.187e-01 -3.664e-01]
      nit: 23
      jac: [-1.049e-06 -5.773e-07 -3.353e-06  2.592e-06  1.582e-06
            -6.939e-07  2.348e-06 -1.044e-06]
     nfev: 378
     njev: 42
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1855960657669584e-11
        x: [-2.274e-01  8.188e-02 -1.944e-01  4.655e-02  3.187e-01
            -3.664e-01  3.946e-01 -1.319e-01]
      nit: 21
      jac: [-1.094e-06  3.603e-06  2.548e-06 -1.416e-06  4.885e-07
             2.570e-06 -2.776e-06  4.163e-07]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.76981779126595e-12
        x: [ 1.299e-01 -1.519e-01  2.474e-01  3.346e-01  1.358e-01
            -1.999e-01  3.187e-01 -3.664e-01]
      nit: 16
      jac: [-1.155e-06  1.149e-06  8.715e-07  1.266e-06  1.288e-06
             2.998e-07  4.829e-07  1.371e-06]
     nfev: 279
     njev: 31
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.218547816099317e-12
        x: [-2.274e-01  8.187e-02 -1.944e-01  4.655e-02  3.187e-01
            -3.664e-01  3.946e-01 -1.319e-01]
      nit: 16
      jac: [ 7.272e-07  5.218e-07  4.996e-08  8.493e-07  5.385e-07
            -3.497e-07 -2.937e-06  3.264e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.723443858267729e-13
        x: [ 1.713e-01  6.267e-03  2.917e-01  2.604e-01  2.748e-01
            -1.324e-01  1.016e-01 -4.630e-01]
      nit: 19
      jac: [-8.271e-07 -2.276e-07 -5.385e-07  3.941e-07  1.110e-08
             0.000e+00 -1.388e-07 -5.440e-07]
     nfev: 324
     njev: 36
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.687494753989995e-12
        x: [ 6.019e-02  1.907e-01  1.014e-01 -2.194e-01 -3.613e-01
            -6.018e-01  3.585e-01 -2.112e-01]
      nit: 35
      jac: [-3.886e-08  1.055e-06  1.327e-06 -1.082e-06 -1.943e-06
            -1.293e-06 -1.887e-07  2.159e-06]
     nfev: 558
     njev: 62
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.9657279116720474e-12
        x: [ 1.299e-01 -1.519e-01  2.474e-01  3.346e-01  1.358e-01
            -1.999e-01  3.187e-01 -3.664e-01]
      nit: 17
      jac: [-2.331e-06  2.404e-06  9.437e-07 -5.385e-07 -1.854e-06
             1.843e-06 -9.270e-07  1.948e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.159494970679134e-11
        x: [-1.423e-01  9.561e-02 -3.891e-01 -3.924e-02  2.748e-01
            -1.324e-01  4.718e-01 -4.645e-02]
      nit: 31
      jac: [-8.071e-06  7.772e-07  5.312e-06 -1.638e-06 -3.192e-06
             1.915e-06 -3.608e-07  9.215e-07]
     nfev: 486
     njev: 54
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1479150963111806e-12
        x: [-2.418e-01 -3.387e-01  3.187e-01  3.664e-01 -1.582e-02
            -1.993e-01  7.600e-03 -2.416e-01]
      nit: 27
      jac: [-3.275e-07 -2.498e-07  1.166e-07  9.936e-07 -1.443e-07
            -1.149e-06  1.005e-06 -9.992e-08]
     nfev: 432
     njev: 48
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 8.153200337090993e-12
        x: [ 1.713e-01 -6.266e-03 -3.891e-01  3.924e-02  2.108e-01
            -2.205e-01  1.900e-01 -4.343e-01]
      nit: 20
      jac: [ 1.876e-06  2.376e-06 -6.772e-07 -2.287e-06  9.548e-07
            -2.082e-06 -2.071e-06 -1.943e-07]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.1922296483390937e-11
        x: [-3.001e-01  5.444e-02  5.889e-02  1.610e-01 -3.544e-01
            -3.149e-01  2.917e-01 -2.604e-01]
      nit: 23
      jac: [ 1.177e-06 -2.992e-06  4.163e-07  2.887e-07 -1.199e-06
            -3.675e-06  2.032e-06 -1.088e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.89859239441148e-12
        x: [ 1.713e-01 -6.266e-03 -3.891e-01  3.924e-02  2.108e-01
            -2.205e-01  1.900e-01 -4.343e-01]
      nit: 19
      jac: [-1.182e-06  1.077e-06 -3.997e-07  2.498e-07  8.271e-07
             3.997e-07 -4.607e-07  1.221e-07]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 9.853406979232204e-11
        x: [-2.274e-01 -8.188e-02  1.299e-01  1.520e-01  4.469e-01
            -1.899e-01 -2.418e-01 -3.387e-01]
      nit: 18
      jac: [ 5.118e-06 -3.503e-06 -2.331e-06  5.418e-06  4.236e-06
            -7.161e-06 -2.093e-06 -1.793e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0465689426197855e-10
        x: [ 4.718e-01 -4.645e-02 -1.445e-01  2.686e-01 -8.292e-02
            -3.821e-01  5.890e-02 -1.610e-01]
      nit: 18
      jac: [-1.804e-06  4.335e-06 -5.507e-06  2.903e-06 -5.501e-06
             5.002e-06  7.377e-06  3.819e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: ABNORMAL_TERMINATION_IN_LNSRCH
  success: False
   status: 2
      fun: 0.056979961445154104
        x: [-1.797e-01 -3.367e-01  6.042e-02 -1.675e-01  5.368e-01
            -2.335e-01  6.317e-01 -2.763e-01]
      nit: 5
      jac: [ 2.071e-01  5.689e-01 -1.460e-02  3.881e-02 -8.582e-01
             3.960e-01 -1.023e+00  5.044e-01]
     nfev: 720
     njev: 80
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 7.69939667577546e-14
        x: [-4.097e-02  3.023e-01 -1.349e-01  1.057e-01  1.900e-01
            -4.343e-01 -1.575e-01 -3.579e-01]
      nit: 20
      jac: [-9.992e-08  6.661e-08 -1.332e-07  7.216e-08  5.551e-09
             1.332e-07 -3.386e-07 -1.832e-07]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3664069875574114e-12
        x: [ 1.299e-01 -1.519e-01  2.474e-01  3.346e-01  1.358e-01
            -1.999e-01  3.187e-01 -3.664e-01]
      nit: 16
      jac: [-1.343e-06  7.827e-07  8.216e-07 -2.109e-07  3.553e-07
            -8.160e-07  7.216e-08  3.886e-07]
     nfev: 288
     njev: 32
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.6624979171098175e-11
        x: [-4.097e-02  3.023e-01 -1.349e-01  1.057e-01  1.900e-01
            -4.343e-01 -1.575e-01 -3.579e-01]
      nit: 18
      jac: [ 1.266e-06 -2.243e-06 -4.408e-06  1.615e-06  2.476e-06
            -4.630e-06  2.837e-06 -1.038e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.3289369604763124e-12
        x: [-1.445e-01 -2.686e-01  4.697e-02 -1.648e-01  1.900e-01
            -4.343e-01  2.917e-01 -2.604e-01]
      nit: 19
      jac: [ 8.882e-08 -2.220e-08  1.665e-08 -6.939e-07 -1.044e-06
             7.605e-07  1.282e-06  8.660e-07]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 0.014152840826639257
        x: [ 1.276e-01  2.952e-01  1.018e-01  3.775e-01  1.018e-01
            -3.776e-01  1.276e-01 -2.952e-01]
      nit: 15
      jac: [-1.482e-06  1.454e-06  2.609e-07  2.387e-06 -6.606e-07
             2.182e-06  2.898e-06  2.442e-07]
     nfev: 288
     njev: 32
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.574951611464485e-11
        x: [ 2.321e-01 -6.742e-02 -1.944e-01 -4.654e-02  4.469e-01
            -1.899e-01  2.474e-01 -3.346e-01]
      nit: 18
      jac: [ 4.363e-06 -5.046e-06  2.442e-06  7.827e-06  3.064e-06
            -7.827e-07  6.772e-07  2.426e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.691913524368374e-12
        x: [-8.291e-02  3.822e-01  1.016e-01  4.630e-01  4.697e-02
            -1.648e-01  2.108e-01 -2.205e-01]
      nit: 17
      jac: [ 1.460e-06 -2.243e-06 -1.876e-06 -1.960e-06 -1.271e-06
             1.316e-06 -2.087e-06  8.327e-08]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.8582691768974655e-12
        x: [ 1.016e-01 -4.630e-01 -3.002e-01 -5.445e-02  3.378e-01
            -1.969e-01 -1.349e-01 -1.057e-01]
      nit: 19
      jac: [-1.943e-07 -2.776e-08 -4.607e-07  0.000e+00  2.109e-07
             6.439e-07  2.892e-06  3.719e-07]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.806471969904692e-11
        x: [ 1.900e-01  4.343e-01  2.748e-01 -1.324e-01  3.378e-01
            -1.969e-01  5.888e-02 -1.610e-01]
      nit: 21
      jac: [ 5.784e-06  8.216e-07  1.071e-06  7.427e-06  5.290e-06
             8.937e-07 -5.473e-06 -4.385e-06]
     nfev: 342
     njev: 38
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.917988321613166e-12
        x: [-1.773e-01 -1.643e-01 -4.142e-01 -3.986e-02 -1.608e-01
            -1.189e-01  4.607e-01 -5.296e-01]
      nit: 26
      jac: [ 2.581e-06  3.608e-07  2.903e-06 -1.071e-06 -1.998e-06
             1.754e-06  2.220e-07  1.610e-07]
     nfev: 432
     njev: 48
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 7.842282379044718e-12
        x: [ 2.321e-01  6.742e-02  1.847e-01  7.663e-02  3.187e-01
            -3.664e-01 -3.484e-03 -4.161e-01]
      nit: 17
      jac: [-3.553e-07  6.939e-07 -2.115e-06  1.477e-06 -1.887e-07
            -9.881e-07 -1.088e-06 -4.352e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.0219437235624582e-11
        x: [-2.274e-01  8.187e-02 -1.944e-01  4.655e-02  3.187e-01
            -3.664e-01  3.946e-01 -1.319e-01]
      nit: 18
      jac: [-1.832e-07  1.704e-06  2.659e-06  3.630e-06  2.776e-08
             4.663e-07  6.811e-06 -2.148e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 3.2680524952866108e-12
        x: [ 1.299e-01 -1.519e-01  2.474e-01  3.346e-01  1.358e-01
            -1.999e-01  3.187e-01 -3.664e-01]
      nit: 16
      jac: [ 1.499e-06 -5.995e-07  1.332e-07  1.260e-06 -1.160e-06
             5.829e-07  1.132e-06 -6.273e-07]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.954015058762252e-12
        x: [-4.090e-01  2.397e-01 -4.097e-02  3.023e-01  2.917e-01
            -2.604e-01 -1.422e-01 -9.560e-02]
      nit: 15
      jac: [-7.661e-07 -1.443e-07  1.477e-06 -1.910e-06 -3.170e-06
             1.255e-06  7.216e-07  1.243e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 9.244621734794123e-11
        x: [ 2.321e-01 -6.741e-02 -1.945e-01 -4.655e-02  4.469e-01
            -1.899e-01  2.474e-01 -3.346e-01]
      nit: 20
      jac: [ 2.498e-06  6.450e-06 -7.522e-06  2.109e-06 -3.719e-06
            -4.324e-06  1.837e-06  2.831e-07]
     nfev: 369
     njev: 41
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.4222290839759353e-12
        x: [-2.418e-01 -3.387e-01  3.187e-01  3.664e-01 -1.582e-02
            -1.993e-01  7.599e-03 -2.416e-01]
      nit: 21
      jac: [-2.387e-07 -1.160e-06  7.216e-08 -2.165e-07 -1.010e-06
             1.599e-06  7.494e-07  1.560e-06]
     nfev: 360
     njev: 40
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0628109503585392e-11
        x: [-1.044e-01  1.705e-01 -3.483e-03  4.161e-01  7.600e-03
            -2.416e-01  4.469e-01 -1.899e-01]
      nit: 18
      jac: [ 2.570e-06  3.630e-06  7.938e-07 -1.382e-06  8.493e-07
             6.661e-07  2.898e-06  4.219e-07]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 7.318590178329032e-13
        x: [ 7.599e-03 -2.416e-01  1.847e-01 -7.663e-02 -4.247e-02
            -4.837e-01  2.474e-01 -3.346e-01]
      nit: 23
      jac: [ 7.772e-08  1.094e-06  4.441e-07 -3.941e-07 -9.992e-08
            -1.943e-07 -1.005e-06  5.440e-07]
     nfev: 549
     njev: 61
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0254735949288829e-10
        x: [-4.097e-02  3.023e-01 -1.349e-01  1.058e-01  1.900e-01
            -4.343e-01 -1.575e-01 -3.579e-01]
      nit: 17
      jac: [ 1.898e-06  3.669e-06  6.189e-06  4.180e-06  6.195e-06
            -1.588e-06  5.207e-06  2.387e-07]
     nfev: 450
     njev: 50
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.9012569296705806e-11
        x: [-2.418e-01 -3.387e-01  3.187e-01  3.664e-01 -1.582e-02
            -1.993e-01  7.600e-03 -2.416e-01]
      nit: 17
      jac: [-3.259e-06 -2.998e-07 -3.753e-06 -4.274e-07 -1.493e-06
            -1.116e-06  1.227e-06 -2.276e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0619838342051935e-12
        x: [-1.422e-01  9.560e-02 -3.891e-01 -3.924e-02  2.748e-01
            -1.324e-01  4.718e-01 -4.645e-02]
      nit: 21
      jac: [ 1.554e-07  8.549e-07  4.163e-07  1.088e-06  5.884e-07
            -1.443e-07  6.051e-07  8.216e-07]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.601874271590532e-11
        x: [ 1.713e-01  6.268e-03  2.917e-01  2.604e-01  2.748e-01
            -1.324e-01  1.016e-01 -4.630e-01]
      nit: 21
      jac: [-3.247e-06 -8.604e-07 -1.887e-06  2.270e-06  2.442e-06
             3.580e-06 -5.451e-06 -1.915e-06]
     nfev: 333
     njev: 37
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.518363543899341e-13
        x: [-4.145e-01 -3.639e-02 -2.100e-01  1.196e-01  1.462e-01
            -4.630e-01  4.562e-01 -5.335e-01]
      nit: 37
      jac: [-7.772e-08  4.940e-07 -1.610e-07  7.383e-07  4.940e-07
             1.110e-07 -1.610e-07  1.554e-07]
     nfev: 549
     njev: 61
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 7.557543479919104e-11
        x: [ 2.321e-01  6.742e-02  1.847e-01  7.663e-02  3.187e-01
            -3.664e-01 -3.481e-03 -4.161e-01]
      nit: 16
      jac: [ 2.359e-06  9.098e-06  9.842e-06 -6.056e-06  6.883e-07
            -5.268e-06  7.178e-06 -3.425e-06]
     nfev: 261
     njev: 29
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 9.357148389455006e-11
        x: [-1.349e-01  1.057e-01 -3.891e-01  3.924e-02 -1.445e-01
            -2.686e-01 -3.544e-01 -3.149e-01]
      nit: 32
      jac: [ 1.898e-06 -5.146e-06  1.710e-06  3.830e-06 -5.457e-06
             7.688e-06 -3.458e-06 -8.493e-07]
     nfev: 684
     njev: 76
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 6.616707182161008e-11
        x: [ 1.900e-01  4.343e-01  2.748e-01 -1.324e-01  3.378e-01
            -1.969e-01  5.888e-02 -1.610e-01]
      nit: 18
      jac: [ 3.730e-06 -3.553e-06  3.680e-06 -1.027e-06  5.990e-06
             9.176e-06 -6.029e-06  7.777e-06]
     nfev: 477
     njev: 53
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 9.859718597127198e-11
        x: [-3.479e-03 -4.161e-01 -4.732e-01  1.091e-01  1.299e-01
            -1.520e-01 -1.481e-01 -1.910e-01]
      nit: 17
      jac: [ 3.386e-06  1.665e-07  7.772e-07 -6.284e-06 -3.803e-06
            -6.539e-06  5.340e-06  5.940e-06]
     nfev: 468
     njev: 52
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.9825863173394964e-11
        x: [-5.200e-02  3.006e-01  1.937e-01  6.800e-01  3.010e-01
            -2.496e-01  2.057e-01 -4.271e-01]
      nit: 53
      jac: [ 1.110e-07 -1.427e-06 -8.882e-07 -8.959e-06 -3.941e-06
             4.441e-06  1.182e-06  3.358e-06]
     nfev: 702
     njev: 78
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.399958258323068e-12
        x: [-1.044e-01 -1.705e-01 -3.968e-01 -1.253e-01 -1.481e-01
            -1.910e-01  3.187e-01 -3.664e-01]
      nit: 21
      jac: [-2.237e-06 -2.925e-06  3.886e-07  2.776e-08 -6.384e-07
            -1.310e-06 -2.887e-07 -1.171e-06]
     nfev: 531
     njev: 59
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0709311215606476e-10
        x: [-2.274e-01 -8.188e-02  1.300e-01  1.520e-01  4.469e-01
            -1.899e-01 -2.418e-01 -3.387e-01]
      nit: 21
      jac: [ 6.856e-06 -7.688e-06  1.954e-06 -1.543e-06 -7.350e-06
            -5.040e-06  7.255e-06 -9.287e-06]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.531930386519889e-13
        x: [ 1.713e-01 -6.267e-03 -3.891e-01  3.924e-02  2.108e-01
            -2.205e-01  1.900e-01 -4.343e-01]
      nit: 20
      jac: [-1.443e-07 -3.331e-07  1.832e-07 -4.441e-07 -2.776e-08
             3.941e-07  3.997e-07  5.662e-07]
     nfev: 324
     njev: 36
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 2.4997504066703868e-11
        x: [-2.500e-01  4.163e-01 -1.481e-01  1.910e-01  2.474e-01
            -3.346e-01 -1.582e-02 -1.993e-01]
      nit: 18
      jac: [-9.825e-07 -1.349e-06 -4.502e-06  1.105e-06  2.909e-06
             5.385e-07  1.588e-06 -5.379e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 5.3196336224914376e-11
        x: [ 4.718e-01 -4.645e-02 -1.445e-01  2.686e-01 -8.291e-02
            -3.822e-01  5.889e-02 -1.610e-01]
      nit: 19
      jac: [-4.424e-06 -4.546e-06  6.400e-06 -3.042e-06  3.264e-06
            -3.575e-06  5.040e-06  4.330e-06]
     nfev: 477
     njev: 53
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [-1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.4887890920078917e-10
        x: [-4.731e-01  1.091e-01 -1.481e-01 -1.910e-01 -3.489e-03
            -4.161e-01  1.299e-01 -1.519e-01]
      nit: 25
      jac: [ 1.665e-06  8.865e-06  5.829e-07 -7.244e-06 -2.776e-07
             8.987e-06 -2.365e-06  1.665e-07]
     nfev: 387
     njev: 43
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: ABNORMAL_TERMINATION_IN_LNSRCH
  success: False
   status: 2
      fun: 0.05233866581028479
        x: [ 4.462e-01 -4.925e-04 -4.474e-01  2.378e-03  4.482e-01
            -4.472e-01  2.605e-03 -4.472e-01]
      nit: 5
      jac: [-2.103e+01 -1.217e-01  2.090e+01 -2.526e-01 -2.121e+01
             2.095e+01  2.098e-02  2.092e+01]
     nfev: 846
     njev: 94
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 4.760636329592671e-13
        x: [ 1.847e-01 -7.663e-02  2.474e-01 -3.346e-01  7.599e-03
            -2.416e-01 -4.247e-02 -4.837e-01]
      nit: 23
      jac: [-4.663e-07 -2.776e-07  1.005e-06 -7.050e-07  4.996e-08
            -2.054e-07 -6.106e-08  2.054e-07]
     nfev: 351
     njev: 39
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00  1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.5673073949784566e-11
        x: [-4.097e-02  3.023e-01 -1.349e-01  1.057e-01  1.900e-01
            -4.343e-01 -1.575e-01 -3.579e-01]
      nit: 18
      jac: [-2.037e-06 -4.707e-06  1.776e-07  2.937e-06 -2.270e-06
            -2.720e-07  1.438e-06 -1.715e-06]
     nfev: 306
     njev: 34
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 0.000000e+00 -1.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 1.0263512262298491e-11
        x: [ 5.889e-02 -1.610e-01 -3.891e-01 -3.924e-02 -4.097e-02
            -3.023e-01  1.016e-01 -4.630e-01]
      nit: 20
      jac: [ 3.442e-07 -7.827e-07  1.094e-06  3.497e-07  4.108e-07
             1.893e-06 -3.042e-06  4.546e-06]
     nfev: 315
     njev: 35
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Vertex minimiser maps = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0), (0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 1.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, 0.0, -1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (1.0, 0.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, 1.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 1.0, 0.0, -1.0, 1.0, -1.0), (0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, 1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 0.0, -1.0), (-1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, -1.0), (0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0), (0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0)]
INFO:scipy.optimize.shgo:Starting minimization at [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]...
INFO:scipy.optimize.shgo:cbounds found for v_min.x_a = [ 1.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 -1.000000e+00  0.000000e+00 -1.000000e+00]
INFO:scipy.optimize.shgo:cbounds = [[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:bounds in kwarg:
INFO:scipy.optimize.shgo:[[-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0], [-1.0, 1.0]]
INFO:scipy.optimize.shgo:lres =   message: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
  success: True
   status: 0
      fun: 7.559730619277616e-11
        x: [ 1.713e-01 -6.260e-03 -3.891e-01  3.924e-02  2.108e-01
            -2.205e-01  1.900e-01 -4.343e-01]
      nit: 20
      jac: [ 1.310e-06  6.217e-06  2.010e-06 -3.214e-06  3.092e-06
             2.803e-06 -8.255e-06  5.129e-06]
     nfev: 297
     njev: 33
 hess_inv: <8x8 LbfgsInvHessProduct with dtype=float64>
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Minimiser pool = SHGO.X_min = []
INFO:scipy.optimize.shgo:Function evaluations done = 1289 / 50000000
INFO:scipy.optimize.shgo:self.HC.V[x].f = 1829.427125
INFO:scipy.optimize.shgo:self.HC.V[x].f = 0.666667
INFO:scipy.optimize.shgo:Lowest function evaluation = 0.000000
INFO:scipy.optimize.shgo:Specified minimum = 0.000000
INFO:scipy.optimize.shgo:Successfully completed construction of complex.
